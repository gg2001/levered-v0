/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Position } from "../Position";

export class Position__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Position> {
    return super.deploy(overrides || {}) as Promise<Position>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Position {
    return super.attach(address) as Position;
  }
  connect(signer: Signer): Position__factory {
    return super.connect(signer) as Position__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Position {
    return new Contract(address, _abi, signerOrProvider) as Position;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRateMode",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "useAsCollateral",
        type: "bool",
      },
    ],
    name: "setUserUseReserveAsCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rateMode",
        type: "uint256",
      },
    ],
    name: "swapBorrowRateMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "aTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610987806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638129fc1c1161005b5780638129fc1c146101955780638da5cb5b1461019d5780639270c759146101c1578063fa51854c146101f757610088565b806301e336671461008d57806316d78527146100c5578063413b4bab146101115780634782f77914610169575b600080fd5b6100c3600480360360608110156100a357600080fd5b506001600160a01b0381358116916020810135909116906040013561022f565b005b6100c3600480360360c08110156100db57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359161ffff6080830135169160a0013516610306565b610157600480360360a081101561012757600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135916080909101351661045b565b60408051918252519081900360200190f35b6100c36004803603604081101561017f57600080fd5b506001600160a01b038135169060200135610637565b6100c36106c1565b6101a561077c565b604080516001600160a01b039092168252519081900360200190f35b6100c3600480360360608110156101d757600080fd5b506001600160a01b03813581169160208101359091169060400135610791565b6100c36004803603606081101561020d57600080fd5b506001600160a01b038135811691602081013590911690604001351515610854565b6000546201000090046001600160a01b0316331461027e5760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505050506040513d60208110156102ff57600080fd5b5050505050565b6000546201000090046001600160a01b031633146103555760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b6040805163a415bcad60e01b81526001600160a01b038781166004830152602482018790526044820186905261ffff85166064830152838116608483015291519188169163a415bcad9160a48082019260009290919082900301818387803b1580156103c057600080fd5b505af11580156103d4573d6000803e3d6000fd5b50506040805163a9059cbb60e01b81523360048201526024810188905290516001600160a01b038916935063a9059cbb925060448083019260209291908290030181600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b505050506040513d602081101561045157600080fd5b5050505050505050565b600080546201000090046001600160a01b031633146104ab5760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b604080516370a0823160e01b8152306004820152905185916001600160a01b0383169163095ea7b3918a9184916370a08231916024808301926020929190829003018186803b1580156104fd57600080fd5b505afa158015610511573d6000803e3d6000fd5b505050506040513d602081101561052757600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b505050506040513d60208110156105a257600080fd5b505060408051631a4ca37b60e21b81526001600160a01b03888116600483015260248201879052858116604483015291516000928a16916369328dec91606480830192602092919082900301818787803b1580156105ff57600080fd5b505af1158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b505198975050505050505050565b6000546201000090046001600160a01b031633146106865760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156106bc573d6000803e3d6000fd5b505050565b600054610100900460ff16806106da57506106da6108fc565b806106e8575060005460ff16155b6107235760405162461bcd60e51b815260040180806020018281038252602e815260200180610903602e913960400191505060405180910390fd5b600054610100900460ff1615801561074e576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b0319163362010000021790558015610779576000805461ff00191690555b50565b6000546201000090046001600160a01b031681565b6000546201000090046001600160a01b031633146107e05760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b826001600160a01b03166394ba89a283836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b50505050505050565b6000546201000090046001600160a01b031633146108a35760405162461bcd60e51b81526004018080602001828103825260218152602001806109316021913960400191505060405180910390fd5b826001600160a01b0316635a3b74b983836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001821515815260200192505050600060405180830381600087803b15801561083757600080fd5b303b159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564506f736974696f6e3a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220ba8c2011a5a47a2871f5ae738fc637797f1326f12e2532e030b2b61a8fb7fb4a64736f6c63430007050033";
